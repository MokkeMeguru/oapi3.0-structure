openapi: 3.0.2
info:
  title: Sample API
  version: 1.0.0
servers:
- url: /
paths:
  /users/me:
    get:
      description: |
        認証されたユーザー自身の情報を取得します。
        このエンドポイントは、ログイン中のユーザーのプロフィール表示に利用されます。
      operationId: getUserMe
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserMeResponse'
          description: OK
      summary: Get my info
      tags:
      - users
    put:
      description: |
        認証されたユーザー自身の情報を更新します。
        このエンドポイントは、ログイン中のユーザーが自身のプロフィールを編集するために利用されます。
      operationId: putUserMe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUserMeRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutUserMeResponse'
          description: OK
      summary: Edit my info
      tags:
      - users
  /users/{userId}:
    get:
      description: |
        指定されたユーザーIDに基づいて、単一のユーザー情報を取得します。
        このエンドポイントは、ユーザーのプロフィール表示や管理のために利用されます。
      operationId: getUserById
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserByIdResponse'
          description: OK
      summary: Get user's info
      tags:
      - users
  /users/{userId}/posts:
    get:
      description: |
        指定されたユーザーIDが作成した投稿のリストを取得します。
        このエンドポイントは、ユーザーのブログや記事の一覧表示に利用されます。
      operationId: getUserPosts
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserPostsResponse'
          description: OK
      summary: Get user's posts
      tags:
      - users
    post:
      description: |
        指定されたユーザーIDに対して新しい投稿を作成します。
        このエンドポイントは、ユーザーが新しいコンテンツを公開するために利用されます。
      operationId: createPost
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePostResponse'
          description: OK
      summary: Create a new post for userId
      tags:
      - users
  /users/{userId}/posts/{postId}:
    delete:
      description: |
        指定されたユーザーIDと投稿IDに基づいて、特定の投稿を削除します。
        このエンドポイントは、ユーザーが自身の投稿を管理するために利用されます。
      operationId: deletePost
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: path
        name: postId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
      summary: Delete a specific post by postId for userId
      tags:
      - users
  /users/{userId}/comments:
    get:
      description: |
        指定されたユーザーIDが作成したコメントのリストを取得します。
        このエンドポイントは、ユーザーの活動履歴やコメントの管理に利用されます。
      operationId: getUserComments
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserCommentsResponse'
          description: OK
      summary: Get comments made by userId
      tags:
      - users
  /users/{userId}/posts/{postId}/comments/{commentId}:
    get:
      description: |
        指定されたユーザーID、投稿ID、コメントIDに基づいて、特定のコメントを取得します。
        このエンドポイントは、特定のコメントの詳細表示に利用されます。
      operationId: getCommentById
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: path
        name: postId
        required: true
        schema:
          type: string
      - in: path
        name: commentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: OK
      summary: Get a specific comment by commentId for a post by postId for userId
      tags:
      - users
  /products/{productId}:
    get:
      description: |
        指定された商品IDに基づいて、単一の商品情報を取得します。
        このエンドポイントは、商品の詳細表示や編集のために利用されます。
      operationId: getProductById
      parameters:
      - in: path
        name: productId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductByIdResponse'
          description: OK
      summary: Get product by ID
      tags:
      - products
components:
  schemas:
    GetUserMeResponse:
      example:
        user:
          recentPosts:
          - author: null
            id: id
            title: title
            content: content
          - author: null
            id: id
            title: title
            content: content
          name: name
          id: id
      properties:
        user:
          $ref: '#/components/schemas/User_1'
      required:
      - user
      type: object
    PutUserMeResponse:
      example:
        user:
          recentPosts:
          - author: null
            id: id
            title: title
            content: content
          - author: null
            id: id
            title: title
            content: content
          name: name
          id: id
      properties:
        user:
          $ref: '#/components/schemas/User_1'
      required:
      - user
      type: object
    PutUserMeRequest:
      example:
        user:
          recentPosts:
          - author: null
            id: id
            title: title
            content: content
          - author: null
            id: id
            title: title
            content: content
          name: name
          id: id
      properties:
        user:
          $ref: '#/components/schemas/User_1'
      required:
      - user
      type: object
    GetUserByIdResponse:
      $ref: '#/components/schemas/User'
    User:
      description: ユーザーの情報を表すスキーマです。
      example:
        recentPosts:
        - author: null
          id: id
          title: title
          content: content
        - author: null
          id: id
          title: title
          content: content
        name: name
        id: id
      properties:
        id:
          description: ユーザーを一意に識別するIDです。
          type: string
        name:
          description: ユーザーの表示名です。
          type: string
        recentPosts:
          description: このユーザーが最近行った投稿のリストです。
          items:
            $ref: '#/components/schemas/Post'
          type: array
      required:
      - id
      - name
      type: object
    GetUserPostsResponse:
      items:
        $ref: '#/components/schemas/Post_1'
      type: array
    CreatePostResponse:
      $ref: '#/components/schemas/Post'
    Post:
      description: ユーザーが作成した投稿の情報を表すスキーマです。
      example:
        author: null
        id: id
        title: title
        content: content
      properties:
        id:
          description: 投稿を一意に識別するIDです。
          type: string
        title:
          description: 投稿のタイトルです。
          type: string
        content:
          description: 投稿の本文内容です。
          type: string
        author:
          $ref: '#/components/schemas/User'
      required:
      - author
      - content
      - id
      - title
      type: object
    CreatePostRequest:
      example:
        title: title
        content: content
      properties:
        title:
          type: string
        content:
          type: string
      required:
      - content
      - title
      type: object
    GetUserCommentsResponse:
      description: List of comments made by the user
      example:
        comments:
        - id: id
          text: text
          postId: postId
        - id: id
          text: text
          postId: postId
      properties:
        comments:
          description: List of comments made by the user
          items:
            $ref: '#/components/schemas/Comment'
          type: array
      type: object
    Comment:
      description: ユーザーが投稿したコメントの情報を表すスキーマです。
      example:
        id: id
        text: text
        postId: postId
      properties:
        id:
          description: コメントを一意に識別するIDです。
          type: string
        text:
          description: コメントの本文です。
          type: string
        postId:
          description: このコメントが紐づく投稿のIDです。
          type: string
      required:
      - id
      - postId
      - text
      type: object
    GetProductByIdResponse:
      $ref: '#/components/schemas/Product'
    Product:
      description: 商品の詳細情報を表すスキーマです。
      example:
        price: 0.8008282
        name: name
        id: id
        category: null
      properties:
        id:
          description: 商品を一意に識別するIDです。
          type: string
        name:
          description: 商品の名称です。
          type: string
        price:
          description: 商品の価格です。
          format: float
          type: number
        category:
          $ref: '#/components/schemas/ProductCategory'
      required:
      - category
      - id
      - name
      - price
      type: object
    User_1:
      description: ユーザーの情報を表すスキーマです。
      example:
        recentPosts:
        - author: null
          id: id
          title: title
          content: content
        - author: null
          id: id
          title: title
          content: content
        name: name
        id: id
      properties:
        id:
          description: ユーザーを一意に識別するIDです。
          type: string
        name:
          description: ユーザーの表示名です。
          type: string
        recentPosts:
          description: このユーザーが最近行った投稿のリストです。
          items:
            $ref: '#/components/schemas/Post_1'
          type: array
      required:
      - id
      - name
      type: object
    Post_1:
      description: ユーザーが作成した投稿の情報を表すスキーマです。
      example:
        author: null
        id: id
        title: title
        content: content
      properties:
        id:
          description: 投稿を一意に識別するIDです。
          type: string
        title:
          description: 投稿のタイトルです。
          type: string
        content:
          description: 投稿の本文内容です。
          type: string
        author:
          $ref: '#/components/schemas/User_1'
      required:
      - author
      - content
      - id
      - title
      type: object
    ProductCategory:
      description: 商品のカテゴリを表します。
      enum:
      - Electronics
      - Books
      - Clothes
      - Food
      - Other
      type: string
